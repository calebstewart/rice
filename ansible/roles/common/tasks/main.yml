---
# FIXME: Uncomment after done testing
# - name: System Upgrade
#   become: true
#   ansible.builtin.dnf:
#     name: "*"
#     state: latest # noqa package-latest
- name: "Install System Tools"
  become: true
  ansible.builtin.dnf:
    name:
      - "neovim"
      - "NetworkManager-tui"
      - "glances"
      - "zsh"
      - "podman"
      - "libvirt"
    state: present
- name: "Enable Podman Socket"
  ansible.builtin.systemd:
    name: "podman.socket"
    scope: user
    enabled: true
    state: started
- name: Install Oh-My-Zsh
  ansible.builtin.import_role:
    name: gantsign.oh-my-zsh
  vars:
    oh_my_zsh_theme: amuse
    oh_my_zsh_plugins:
      - git
      - zsh-syntax-highlighting
    oh_my_zsh_update_mode: auto
    oh_my_zsh_frequency: 10
    users:
      - username: "{{ ansible_env.USER }}"
        theme: amuse
        plugins:
          - git
          - zsh-syntax-highlighting
        update_mode: auto
        update_frequency: 10
- name: "Install Oh-My-Zsh custom scripts"
  ansible.builtin.copy:
    src: files/zsh-custom/
    dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/"
    owner: "{{ ansible_env.USER }}"
    group: "{{ ansible_env.USER }}"
    mode: preserve
- name: "Install Systemd Environment Setup Scripts"
  ansible.builtin.copy:
    src: files/environment.d
    dest: "{{ ansible_env.HOME }}/.config/"
    owner: "{{ ansible_env.USER }}"
    group: "{{ ansible_env.USER }}"
    mode: preserve
- name: "Install zsh-syntax-highlighting"
  ansible.builtin.git:
    repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
    dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting"
    update: true
    accept_newhostkey: true
    single_branch: true
- name: "Symlink vim to nvim"
  become: true
  ansible.builtin.file:
    src: /usr/bin/nvim
    dest: /usr/bin/vim
    state: link
- name: Enable the RPM Fusion repository
  become: true
  ansible.builtin.dnf:
    name: "https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ ansible_distribution_major_version }}.noarch.rpm"
    disable_gpg_check: true
    state: present
- name: Allow User Management of Virtual Machines
  become: true
  ansible.builtin.user:
    name: "{{ ansible_env.USER }}"
    append: true
    groups:
      - libvirt
- name: Add the flathub flatpak repository remote
  community.general.flatpak_remote:
    name: flathub
    state: present
    flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo
    method: user
- name: "Create User Icons Directory"
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.local/share/icons"
    state: directory
    mode: "0744"
    owner: "{{ ansible_env.USER }}"
    group: "{{ ansible_env.USER }}"
- name: "Create User Application Directory"
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.local/share/applications"
    state: directory
    mode: "0744"
    owner: "{{ ansible_env.USER }}"
    group: "{{ ansible_env.USER }}"
