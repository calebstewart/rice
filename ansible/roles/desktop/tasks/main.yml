---
- name: Enable SwayNotificationCenter COPR Repository
  become: true
  community.general.copr:
    host: copr.fedorainfracloud.org
    state: enabled
    name: erikreider/SwayNotificationCenter
- name: Add Brave Browser Repository
  become: true
  ansible.builtin.get_url:
    url: "https://brave-browser-rpm-release.s3.brave.com/brave-browser.repo"
    dest: /etc/yum.repos.d/brave-browser.repo
    mode: "0644"
    owner: root
    group: root
- name: Import Brave Browser Public Key
  become: true
  ansible.builtin.rpm_key:
    state: present
    key: "https://brave-browser-rpm-release.s3.brave.com/brave-core.asc"
- name: Install Desktop Packages
  become: true
  ansible.builtin.dnf:
    name:
      - sway
      - swaylock
      - wofi
      - waybar
      - swayidle
      - grimshot
      - SwayNotificationCenter
      - NetworkManager-tui
      - alacritty
      - gammastep
      - brightnessctl
      - linux-libertine-fonts
      - google-noto-emoji-color-fonts
      - fontawesome-fonts
      - fontawesome-fonts-web
      - fontawesome5-fonts
      - fontawesome5-free-fonts
      - brave-browser
    state: present
- name: Install Desktop Flatpaks
  community.general.flatpak:
    name:
      - org.signal.Signal
- name: Check if Browserpass Native Exists
  ansible.builtin.stat:
    path: /usr/bin/browserpass-linux64
  register: browserpass_result
- name: Import Browserpass Native GPG Key
  ansible.builtin.command: gpg --recv-keys 56C3E775E72B0C8B1C0C1BD0B5DB77409B11B601
  when: not browserpass_result.stat.exists
  register: pass_gpg
  changed_when: pass_gpg.rc != 0
  failed_when: pass_gpg.rc != 0
- name: Download Browserpas Native
  ansible.builtin.get_url:
    url: https://github.com/browserpass/browserpass-native/releases/download/3.1.0/browserpass-linux64-3.1.0.tar.gz
    dest: "/tmp/browserpass-linux64.tar.gz"
    mode: "0600"
  when: not browserpass_result.stat.exists
- name: Download Browserpass Native Signature
  ansible.builtin.get_url:
    url: https://github.com/browserpass/browserpass-native/releases/download/3.1.0/browserpass-linux64-3.1.0.tar.gz.asc
    dest: "/tmp/browserpass-linux64.tar.gz.asc"
    mode: "0600"
  when: not browserpass_result.stat.exists
- name: Validate Browserpass Native Signature
  ansible.builtin.command: gpgv /tmp/browserpass-linux64.tar.gz.asc
  when: not browserpass_result.stat.exists
  register: pass_gpgv
  failed_when: pass_gpgv.rc != 0
  changed_when: false
- name: Unpack Browserpass Native
  ansible.builtin.unarchive:
    src: /tmp/browserpass-linux64.tar.gz
    dest: /tmp/
  when: not browserpass_result.stat.exists
- name: Install Browserpass Native
  become: true
  ansible.builtin.shell: |
    make BIN=browserpass-linux64 configure
    make BIN=browserpass-linux64 install
  args:
    chdir: /tmp/browserpass-linux64-3.1.0/
  when: not browserpass_result.stat.exists
  changed_when: true
- name: Install Desktop Configurations
  ansible.builtin.copy:
    src: files/config/
    dest: "{{ ansible_env.HOME }}/.config/"
    owner: "{{ ansible_env.USER }}"
    group: "{{ ansible_env.USER }}"
    mode: preserve
- name: Enable Gammastep Service
  ansible.builtin.systemd:
    name: "gammastep.service"
    scope: "user"
    enabled: true
    daemon_reload: true
- name: Enable Notification Center Service
  ansible.builtin.systemd:
    name: "swaync.service"
    scope: "user"
    enabled: true
    daemon_reload: true
- name: Download Desktop Wallpaper
  ansible.builtin.get_url:
    url: https://wallpaperaccess.com/download/orange-polygon-692137
    dest: "{{ ansible_env.HOME }}/Pictures/orange-polygon-material-wallpaper.png"
    mode: "0644"
    owner: "{{ ansible_env.USER }}"
    group: "{{ ansible_env.USER }}"
- name: Link Current Wallpaper
  ansible.builtin.file:
    src: "{{ ansible_env.HOME }}/Pictures/orange-polygon-material-wallpaper.png"
    dest: "{{ ansible_env.HOME }}/Pictures/desktop-background"
    owner: "{{ ansible_env.USER }}"
    group: "{{ ansible_env.USER }}"
    mode: "0600"
    state: link
- name: Updating fontconfig cache
  ansible.builtin.command: fc-cache -f
  changed_when: true
