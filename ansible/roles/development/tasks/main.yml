---
- name: Install Development Tools
  become: true
  ansible.builtin.dnf:
    name:
      - emacs
      - golang
      - poetry
      - black
      - rbenv
      - gpg
      - '@Development tools'
    state: present
- name: Install Python Packages
  ansible.builtin.pip:
    executable: "/usr/bin/pip"
    name:
      - pyright
      - isort
- name: Install Golang LSP Server
  ansible.builtin.command: "go install golang.org/x/tools/gopls@latest"
  args:
    creates: "{{ ansible_env.HOME }}/.local/share/go/bin/gopls"
  environment:
    GOPATH: "{{ ansible_env.HOME }}/.local/share/go"
- name: Install Doom Emacs Config
  ansible.builtin.copy:
    src: files/doom
    dest: "{{ ansible_env.HOME }}/.config/"
    owner: "{{ ansible_env.USER }}"
    group: "{{ ansible_env.USER }}"
    mode: preserve
- name: Check for Doom Emacs
  ansible.builtin.stat:
    path: "{{ ansible_env.HOME }}/.config/emacs/bin/doom"
  register: doom_check
- name: Update Doom
  ansible.builtin.command: "{{ ansible_env.HOME }}/.config/emacs/bin/doom upgrade --force"
  when: doom_check.stat.exists
  changed_when: doom_check.stat.exists
- name: Synchronize Doom Configuration
  ansible.builtin.command: "{{ ansible_env.HOME }}/.config/emacs/bin/doom sync"
  when: doom_check.stat.exists
  changed_when: doom_check.stat.exists
- name: Clone Doom Emacs
  ansible.builtin.git:
    dest: "{{ ansible_env.HOME }}/.config/emacs"
    repo: "https://github.com/doomemacs/doomemacs"
    depth: 1
  when: not doom_check.stat.exists
- name: Install Doom Emacs
  ansible.builtin.command: |
    {{ ansible_env.HOME }}/.config/emacs/bin/doom install \
      --env \
      --install \
      --fonts \
      --hooks \
      --force \
      --doomdir {{ ansible_env.HOME }}/.config/doom
  when: not doom_check.stat.exists
  changed_when: not doom_check.stat.exists
- name: Install zsh custom script
  ansible.builtin.copy:
    src: files/100-development.zsh
    dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/"
    owner: "{{ ansible_env.USER }}"
    group: "{{ ansible_env.USER }}"
    mode: preserve
- name: Download AWS CLI installer
  ansible.builtin.get_url:
    url: "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip"
    dest: "/tmp/awscliv2.zip"
    mode: "0600"
- name: Download AWS CLI signature
  ansible.builtin.get_url:
    url: "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip.sig"
    dest: "/tmp/awscliv2.zip.sig"
    mode: "0600"
- name: Copy AWS CLI public key
  ansible.builtin.copy:
    src: files/awscli-pubkey.pub
    dest: "/tmp/awscli-pubkey.pub"
    mode: preserve
- name: Verify AWS CLI Installer
  ansible.builtin.shell: |
    gpg --import /tmp/awscli-pubkey.pub && \
      gpgv /tmp/awscliv2.zip.sig /tmp/awscliv2.zip
  changed_when: true
- name: Unzip awscli Installer
  ansible.builtin.unarchive:
    src: /tmp/awscliv2.zip
    dest: /tmp
    copy: false
- name: Install AWS CLI
  become: true
  ansible.builtin.command: /tmp/aws/install --update
  changed_when: true
- name: Install AWS Session Manager Plugin
  become: true
  ansible.builtin.dnf:
    name: 'https://s3.amazonaws.com/session-manager-downloads/plugin/latest/linux_64bit/session-manager-plugin.rpm'
    # NOTE: i don't like this, but it seems the RPM isn't signed
    disable_gpg_check: true
    state: present
